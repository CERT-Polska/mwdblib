from typing import Any, Type, TypeVar
from .methods import MWDBMethods
from .object import MWDBObject

T = TypeVar("T", bound=MWDBObject)

class RemoteAPIClient(object):
    def __init__(self, local_api: Any, remote_name: str) -> None: ...
    def request(self, method: str, url: str, api: bool = True, *args: Any, **kwargs: Any) -> Any: ...
    def get(self, *args: Any, **kwargs: Any) -> Any: ...
    def post(self, *args: Any, **kwargs: Any) -> Any: ...
    def put(self, *args: Any, **kwargs: Any) -> Any: ...
    def delete(self, *args: Any, **kwargs: Any) -> Any: ...


class MWDBRemote(MWDBMethods):
    def __init__(self, api: Any) -> None: ...
    @property
    def local_api(self) -> Any: ...
    def _pull(self, object_type: Type[T], object: T) -> T: ...
    def _push(self, object_type: Type[T], object: T) -> T: ...
    def pull_object(self, object: T) -> T: ...
    def push_object(self, object: T) -> T: ...
